from typing import Any

from .base import BaseMixin

class ProjectMixin(BaseMixin):
    def get_project(self, project_id: str) -> dict[str, Any] | None: ...
    def get_project_releases(self, project_id: str, transitive: bool = False) -> Any: ...
    def get_project_by_url(self, url: str) -> dict[str, Any] | None: ...
    def get_projects(
        self, all_details: bool = False, page: int = -1, page_size: int = -1, sort: str = ""
    ) -> dict[str, Any] | None: ...
    def get_projects_by_type(self, project_type: str) -> list[dict[str, Any]]: ...
    def get_project_names(self) -> list[str]: ...
    def get_projects_by_name(self, name: str) -> list[dict[str, Any]]: ...
    def get_projects_by_external_id(self, ext_id_name: str, ext_id_value: str = "") -> list[dict[str, Any]]: ...
    def get_projects_by_group(self, group: str, all_details: bool = False) -> list[dict[str, Any]]: ...
    def get_projects_by_tag(self, tag: str) -> list[dict[str, Any]]: ...
    def get_project_vulnerabilities(self, project_id: str) -> dict[str, Any] | None: ...
    def create_new_project(
        self,
        name: str,
        project_type: str,
        visibility: Any,
        description: str = "",
        version: str = "",
        project_details: dict[str, Any] = {},
    ) -> dict[str, Any] | None: ...
    def update_project(
        self, project: dict[str, Any], project_id: str, add_subprojects: bool = False
    ) -> dict[str, Any] | None: ...
    def update_project_releases(self, releases: list[dict[str, Any]], project_id: str, add: bool = False) -> bool: ...
    def update_project_external_id(
        self, ext_id_name: str, ext_id_value: str, project_id: str, update_mode: str = "none"
    ) -> Any: ...
    def delete_project(self, project_id: str) -> dict[str, Any] | None: ...
    def get_users_of_project(self, project_id: str) -> dict[str, Any] | None: ...
    def duplicate_project(self, project_id: str, new_version: str) -> dict[str, Any] | None: ...
    def update_project_release_relationship(
        self, project_id: str, release_id: str, new_state: str, new_relation: str, comment: str
    ) -> dict[str, Any] | None: ...
